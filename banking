class Bank:
    def __init__(self):
        self.accounts = {}

    def create_account(self, account_number, account_holder, initial_balance):
        if account_number in self.accounts:
            return "Account already exists"
        if initial_balance < 0:
            return "Initial balance must be non-negative"

        self.accounts[account_number] = {
            "account_holder": account_holder,
            "balance": initial_balance
        }
        return "Account created successfully"

    def deposit(self, account_number, amount):
        if account_number not in self.accounts:
            return "Account does not exist"
        if amount <= 0:
            return "Amount to deposit must be positive"

        self.accounts[account_number]['balance'] += amount
        return f"Deposited {amount} successfully. New Balance: {self.accounts[account_number]['balance']}"

    def withdraw(self, account_number, amount):
        if account_number not in self.accounts:
            return "Account does not exist"
        if amount <= 0:
            return "Amount to withdraw must be positive"
        if self.accounts[account_number]['balance'] < amount:
            return "Insufficient balance"

        self.accounts[account_number]['balance'] -= amount
        return f"Withdrew {amount} successfully. New Balance: {self.accounts[account_number]['balance']}"

    def check_balance(self, account_number):
        if account_number not in self.accounts:
            return "Account does not exist"

        acc = self.accounts[account_number]
        return f"Account Holder: {acc['account_holder']}, Balance: {acc['balance']}"

# Interactive Menu
bank = Bank()

print("\n******* Bank Management System *******")
print("\n1. Create Account")
print("2. Deposit Money")
print("3. Withdraw Money")
print("4. Check Balance")
print("5. Exit")

while True:
    choice = input("\nEnter your choice (1 to 5): ")

    if choice == '1':
        acc_num = input("Enter account number: ")
        acc_holder = input("Enter account holder name: ")
        try:
            init_bal = float(input("Enter initial balance: "))
        except ValueError:
            print("Invalid balance amount.")
            continue
        print(bank.create_account(acc_num, acc_holder, init_bal))

    elif choice == '2':
        acc_num = input("Enter account number: ")
        try:
            amount = float(input("Enter amount to deposit: "))
        except ValueError:
            print("Invalid deposit amount.")
            continue
        print(bank.deposit(acc_num, amount))

    elif choice == '3':
        acc_num = input("Enter account number: ")
        try:
            amount = float(input("Enter amount to withdraw: "))
        except ValueError:
            print("Invalid withdrawal amount.")
            continue
        print(bank.withdraw(acc_num, amount))

    elif choice == '4':
        acc_num = input("Enter account number: ")
        print(bank.check_balance(acc_num))

    elif choice == '5':
        print("Thank you for using the Bank Management System.")
        break

    else:
        print("Invalid choice. Please enter a number between 1 and 5.")
